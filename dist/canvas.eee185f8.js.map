{"version":3,"sources":["../src/globalMap.ts","../src/index.ts","../index.ts"],"names":[],"mappings":";;;;;;AEAA,AFKa,IELb,GFKa,CAAA,GELb,GAAA,GFKa,GAAwB,CELrC,CAAA,AFKa,aELb,CAAA;ADAA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;ACEA,AFOA,OEPA,AFOA,CEPA,AFOA,MEPA,CAAO,EFOP,CAAU,GAAV,CEPA,EAAgB,AFOA,UAAC,GAAD,EAAM,KAAN,EAAW;AEN1B,AFM+B,ACPnB,ECCZ,KAAK,ADDO,CAAA,CCCL,AFMwB,KCPnB,EDOmB,CAAA,ACPV,SDOU,CAAU,ACPnB,GDOS,ACPV,EAAM,EDOqB,GCP3B,EDOU,ACPC;ACAjB,AFOsC,ACNpD,CCDF,AFOA,KCNQ,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,EAAA,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,KAArB;ADMF,ACLE,EAAA,KDKF,CAAA,KCLE,CAAA,GDKF,CAAU,GAAV,GAAgB,CCLd,CAAY,QDKE,GAAA,EAAG,GCLjB,CAA6B,MAA7B;ADKqB,ACJrB,MAAM,EAAE,CDIa,ECJV,KDIU,CAAA,ACJJ,CAAC,QDIG,CAAU,CCJpB,CAAkB,CDIR,CAAA,KCJV,CAAX,CAJ+B,CAK/B;ADGmC,CAArC;ACFE,MAAI,CAAC,EAAL,EAAS;ADIE,ACHT,IAAA,GDGS,CAAA,CCHJ,CAAC,SDGG,GAAc,0BCHlB,CAAL;ADIH,ACHG,EDGH,gBAAgB,EAAE,0BAAA,IAAA,EAAI;AAAI,ACFxB,WDEwB,OAAA,CAAA,SAAA,CAAU,GAAV,CAAc,gBAAd,EAAgC,IAAhC,CAAA;AAAqC,GADrC;AAE1B,ACFC,EDED,ACFC,WAAA,CDEW,ACFX,EDEa,SCFb,CAAY,YDEC,IAAA,ACFb,CAA6B,CDEZ,CCFjB,EAV+B,CAY/B;ADAqB,WAAA,OAAA,CAAA,SAAA,CAAU,GAAV,CAAc,WAAd,EAA2B,IAA3B,CAAA;AAAgC,ACCrD,EAAA,EAAE,CAAC,UAAH,CAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAb+B,CAc/B;ADJyB,CAAd;ACKX,EAAA,EAAE,CAAC,KAAH,CAAS,EAAE,CAAC,gBAAZ;AACA,EAAA,QAAQ,CAAC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAA;AAC/C,QAAG,OAAO,GAAP,KAAgB,QAAnB,EAA6B;AAC5B,MAAA,GAAG,CAAC,WAAJ,CAAgB,MAAhB;AACA;AACA;;AACD,IAAA,QAAQ,CAAC,aAAT,CAAuB,GAAvB,EAA4B,WAA5B,CAAwC,MAAxC;AAEE,GAPD;AAQD,CAxBY","file":"canvas.eee185f8.js","sourceRoot":"../demo","sourcesContent":["export interface IGlobalMap {\n\tcanvasInstance: HTMLCanvasElement,\n\tcanvasCtx:CanvasRenderingContext2D,\n}\n\nexport const GlobalMap: IGlobalMap = {\n\t\n}\n\nGlobalMap.set = (key, value) => GlobalMap[key] = value; \nGlobalMap.get = key => GlobalMap[key]\n\nexport const DataChanger = {\n\tsetCanvasInstace: data => GlobalMap.set('canvasInstance', data),\n\tsetCanvasCtx: data => GlobalMap.set('canvasCtx', data),\n}\n","import { GlobalMap, DataChanger } from \"./globalMap\";\n\nexport const Render = (dom, props) => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style = props.style\n  DataChanger.setCanvasInstace(canvas);\n  const gl = canvas.getContext(\"webgl\");\n  // 确认WebGL支持性\n  if (!gl) {\n    alert(\"无法初始化WebGL，你的浏览器、操作系统或硬件等可能不支持WebGL。\");\n    return;\n  }\n  DataChanger.setCanvasInstace(gl);\n\n  // 使用完全不透明的黑色清除所有图像\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\n  // 用上面指定的颜色清除缓冲区\n  gl.clear(gl.COLOR_BUFFER_BIT);\n  document.addEventListener(\"DOMContentLoaded\", function () {\n\tif(typeof dom  === 'pbject') {\n\t\tdom.appendChild(canvas);\n\t\treturn\n\t}\n\tdocument.querySelector(dom).appendChild(canvas)\n\t\n  });\n};\n","import {Render} from './src/index'\n\nRender('#root', {\n\tstyle: `width: 100vw;height: 100vh`\n})\n"]}